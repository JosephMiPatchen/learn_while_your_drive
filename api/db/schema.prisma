datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                          String  @id @default(uuid())
  email                       String  @unique
  name                        String?
  averageDriveDurationMinutes Int
  goal                        String?

  ContentItem ContentItem[]
  learningTree LearningTree?   // A user can have only one LearningTree
}

model ContentItem {
  id          String   @id @default(uuid())
  title       String
  description String
  url         String?
  content     String?
  createdAt   DateTime @default(now())
  modifiedAt  DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  nextContentItemId String?      @unique
  nextContentItem   ContentItem? @relation("NextContentItem", fields: [nextContentItemId], references: [id])
  ContentItem       ContentItem? @relation("NextContentItem")
}

model LearningTree {
  id          String           @id @default(uuid())
  createdAt   DateTime         @default(now())

  user        User             @relation(fields: [userId], references: [id])
  userId      String           @unique  // Enforces one-to-one relationship with User

  rootNodeId  String?
}

model LearningTreeNode {
  id          String           @id @default(uuid())
  topic       String
  createdAt   DateTime         @default(now())
  isRoot      Boolean          @default(false)

  parentId    String?           // For linking to the parent node in the tree structure
  parent      LearningTreeNode? @relation("ChildNodes", fields: [parentId], references: [id])
  children    LearningTreeNode[] @relation("ChildNodes")


}
